"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFunctions = void 0;
const strictMap_1 = require("../strictMap");
const getFunctions = async (cxn) => {
    var _a;
    const functionsJson = await cxn.queryJSON(`
    with module schema
    select Function {
      id,
      name,
      annotations: {
        name,
        @value
      } filter .name = 'std::description',
      return_type: {id, name},
      return_typemod,
      params: {
        name,
        type: {id, name},
        kind,
        typemod,
        hasDefault := exists .default,
      } order by @index,
      preserves_optionality,
    } filter .internal = false
  `);
    const functions = new strictMap_1.StrictMap();
    for (const func of JSON.parse(functionsJson)) {
        const { name } = func;
        if (!functions.has(name)) {
            functions.set(name, []);
        }
        functions.get(name).push({
            ...func,
            description: (_a = func.annotations[0]) === null || _a === void 0 ? void 0 : _a["@value"],
        });
    }
    return functions;
};
exports.getFunctions = getFunctions;
